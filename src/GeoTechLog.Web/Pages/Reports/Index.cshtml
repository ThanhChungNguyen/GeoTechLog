@page
@using GeoTechLog.Reports
@model GeoTechLog.Web.Pages.Reports.IndexModel
@{
    ViewData["Title"] = "Geotechnical Reports";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Geotechnical Reports</h2>
        <button id="CreateReportBtn" class="btn btn-primary">
            <i class="fa fa-plus"></i> New Report
        </button>
    </div>

    <table id="ReportsTable" class="table table-striped table-bordered nowrap" style="width:100%">
        <thead>
            <tr>
                <th>Title</th>
                <th>Type</th>
                <th>Status</th>
                <th>Current Version</th>
                <th>Created At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var report in Model.Reports.Items)
            {
                <tr>
                    <td>@report.Title</td>
                    <td>@report.ReportTypeName</td>
                    <td>
                        @{
                            var statusClass = report.Status switch
                            {
                                ReportStatus.Draft => "secondary",
                                ReportStatus.Review => "warning",
                                ReportStatus.Approved => "success",
                                ReportStatus.Rejected => "danger",
                                _ => "light"
                            };
                        }
                        <span class="badge badge-@statusClass">
                            @report.Status.ToString()
                        </span>
                    </td>
                    <td>@report.CurrentVersionNumber</td>
                    <td>@report.CreationTime.ToString("yyyy-MM-dd")</td>
                    <td>
                        <button class="btn btn-sm btn-info edit-report" data-id="@report.Id">Edit</button>
                        <button class="btn btn-sm btn-success approve-report" data-id="@report.Id">Approve</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Create/Edit Modal -->
<div id="CreateReportModalContainer"></div>


@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.4.1/js/dataTables.responsive.min.js"></script>
    <script>
        var csrfToken = '@Antiforgery.GetAndStoreTokens(HttpContext).RequestToken';

        $(function () {
            // Init DataTable
            $('#ReportsTable').DataTable({
                responsive: true
            });

            $(document).on('submit', '#CreateReportForm', function (e) {
                e.preventDefault();
                console.log('Submit intercepted');

                var form = $(this);

                $.ajax({
                    url: '/api/reports',
                    type: 'POST',
                    @* data: form.serialize(), *@
                    data: JSON.stringify({
                        title: "My Hardcoded Test Report",
                        reportTypeId: "11111111-1111-1111-1111-111111111111",
                        boreholeIds: ["b2a5c62d-97e2-4fc5-9d08-246b5b3a6c1a"],
                        summary: "This is a summary of the test report.",
                        contentJson: "{\"sections\": [\"Introduction\", \"Findings\"]}"
                    }),
                    headers: {
                    'RequestVerificationToken': csrfToken,
                    'Content-Type': 'application/json'
                },
                    success: function () {
                        $('#CreateReportModal').modal('hide');
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        console.error('Error creating report:', error);
                    }
                    });
        });

        // Open Create Modal
        $('#CreateReportBtn').click(function () {
            $.ajax({
                url: '/Reports/CreateModal',
                type: 'GET',
                success: function (content) {
                    console.log('Response content:', content);
                    $('#CreateReportModalContainer').html(content);
                    $('#CreateReportModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error('AJAX error:', xhr, status, error);
                    alert('Error loading modal: ' + error);
                }
            });
        });

        // Open Edit Modal
        $('.edit-report').click(function () {
            var id = $(this).data('id');
            id = new Guid("b5e5638e-4cd3-9f78-576a-3a1ba4b09799"); // Example ID, replace with actual logic
            console.log('Edit report ID:', id);
            $.ajax({
                url: '/Reports/EditModal?id=' + id,
                type: 'GET',
                success: function (content) {
                    $('#CreateReportModalContainer').html(content);
                    $('#EditReportModal').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error('Error loading edit modal:', error);
                    alert('Error loading modal: ' + error);
                }
            });
        });

        // Approve report
        $('.approve-report').click(function () {
            var id = $(this).data('id');
            id = new Guid("b5e5638e-4cd3-9f78-576a-3a1ba4b09799");
            console.log('Approve report ID:', id);
            if (confirm('Are you sure you want to approve this report?')) {
                $.ajax({
                    url: '/api/app/report/' + id + '/approve',
                    type: 'POST',
                    success: function () {
                        alert('Report approved successfully!');
                        location.reload();
                    },
                    error: function (xhr, status, error) {
                        console.error('Error approving report:', error);
                        alert('Error approving report: ' + error);
                    }
                });
            }
        });

            });

    </script>
}
